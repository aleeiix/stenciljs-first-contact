/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AppButton {
    'clickButtonEmit': () => Promise<void>;
    'text': string;
  }
  interface AppModal {
    'closeModal': () => Promise<void>;
    'header': string;
    'openModal': () => Promise<void>;
  }
}

declare global {


  interface HTMLAppButtonElement extends Components.AppButton, HTMLStencilElement {}
  var HTMLAppButtonElement: {
    prototype: HTMLAppButtonElement;
    new (): HTMLAppButtonElement;
  };

  interface HTMLAppModalElement extends Components.AppModal, HTMLStencilElement {}
  var HTMLAppModalElement: {
    prototype: HTMLAppModalElement;
    new (): HTMLAppModalElement;
  };
  interface HTMLElementTagNameMap {
    'app-button': HTMLAppButtonElement;
    'app-modal': HTMLAppModalElement;
  }
}

declare namespace LocalJSX {
  interface AppButton extends JSXBase.HTMLAttributes<HTMLAppButtonElement> {
    'onClickButton'?: (event: CustomEvent<void>) => void;
    'text'?: string;
  }
  interface AppModal extends JSXBase.HTMLAttributes<HTMLAppModalElement> {
    'header'?: string;
    'onClose'?: (event: CustomEvent<boolean>) => void;
    'onOpen'?: (event: CustomEvent<boolean>) => void;
  }

  interface IntrinsicElements {
    'app-button': AppButton;
    'app-modal': AppModal;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


